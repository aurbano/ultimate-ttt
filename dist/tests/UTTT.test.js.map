{"version":3,"sources":["../../src/tests/UTTT.test.js"],"names":["validateBoard","board","t","true","Array","isArray","forEach","row","cell","is","winner","game","isFinished","getResult","isValidMove","addMyMove","addOpponentMove","prettyPrint","player","throws","message","gameFinished","false","boardFinished","notThrows"],"mappings":"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","file":"UTTT.test.js","sourcesContent":["import test from 'ava';\n\nimport UTTT from '../UTTT';\nimport errors from '../model/errors';\nimport { ME, OPPONENT, RESULT_TIE, RESULT_WIN, RESULT_LOSE } from '../model/SubBoard';\nimport error from '../error';\n\nfunction validateBoard(board, t){\n  t.true(Array.isArray(board));\n\n  board.forEach((row) => {\n    t.true(Array.isArray(row));\n    row.forEach((cell) => {\n      t.is(cell.winner, RESULT_TIE - 1);\n    });\n  });\n}\n\ntest('Returns a valid UTTT model', t => {\n  const game = new UTTT();\n\n  t.is(typeof(game), 'object');\n  t.is(typeof(game.isFinished), 'function');\n  t.is(typeof(game.getResult), 'function');\n  t.is(typeof(game.isValidMove), 'function');\n  t.is(typeof(game.addMyMove), 'function');\n  t.is(typeof(game.addOpponentMove), 'function');\n  t.is(typeof(game.prettyPrint), 'function');\n\n  validateBoard(game.board, t);\n});\n\ntest('Moves correctly update the board', t => {\n  let game = new UTTT();\n\n  game = game.addMyMove([1, 0], [0, 0]);\n  game = game.addOpponentMove([0, 0], [2, 1]);\n\n  t.is(game.board[1][0].board[0][0].player, ME);\n  t.is(game.board[0][0].board[2][1].player, OPPONENT);\n});\n\ntest('Move rejects moves to the wrong board', t => {\n  let game = new UTTT();\n\n  game = game.addMyMove([1, 0], [0, 0]);\n\n  t.throws(() => {\n    game.addOpponentMove([2, 0], [2, 1])\n  }, error(errors.board, [2, 0]).message);\n});\n\ntest('Detect game ending', t => {\n  let game = new UTTT();\n\n  // Win [0, 0]\n  game = game.addMyMove([0, 0], [0, 0]);\n  game = game.addMyMove([0, 0], [1, 0]);\n  game = game.addMyMove([1, 0], [0, 0]);\n  game = game.addMyMove([0, 0], [2, 0]);\n\n  // Win [1, 0]\n  game = game.addMyMove([2, 0], [1, 0]);\n  game = game.addMyMove([1, 0], [1, 0]);\n  game = game.addMyMove([1, 0], [2, 0]);\n\n  // Win [2, 0]\n  game = game.addMyMove([2, 0], [2, 0]);\n  game = game.addMyMove([2, 0], [0, 0]);\n\n  t.true(game.isFinished());\n\n  t.throws(() => {\n    game.addMyMove([0, 0], [1, 1]);\n  }, error(errors.gameFinished).message);\n\n  t.is(game.winner, ME);\n});\n\ntest('Move doesn\\'t allow playing on already won boards', t => {\n  let game = new UTTT();\n\n  // Win [0, 0]\n  game = game.addMyMove([0, 0], [0, 0]);\n  game = game.addMyMove([0, 0], [1, 0]);\n  game = game.addMyMove([1, 0], [0, 0]);\n  game = game.addMyMove([0, 0], [2, 0]);\n  game = game.addMyMove([2, 0], [0, 0]);\n\n  t.false(game.isFinished());\n\n  t.throws(() => {\n    game.addMyMove([0, 0], [1, 1]);\n  }, error(errors.boardFinished).message);\n});\n\ntest('Move allows any board after being sent to one that is won', t => {\n  let game = new UTTT();\n\n  // Fill [0, 0]\n  game = game.addMyMove([0, 0], [0, 0]);\n  game = game.addMyMove([0, 0], [1, 0]);\n  game = game.addMyMove([1, 0], [0, 0]);\n  game = game.addMyMove([0, 0], [2, 0]);\n\n  t.notThrows(() => {\n    game.addMyMove([2, 0], [0, 0]);\n  });\n});\n\ntest('A tie in a board works properly', t => {\n  let game = new UTTT();\n\n  // Fill [0, 0]\n  game = game.addMyMove([0, 0], [0, 0]);\n  game = game.addOpponentMove([0, 0], [1, 0]);\n  game = game.addMyMove([1, 0], [0, 0]);\n  game = game.addOpponentMove([0, 0], [2, 0]);\n  game = game.addMyMove([2, 0], [0, 0]);\n  game = game.addOpponentMove([0, 0], [0, 1]);\n  game = game.addMyMove([0, 1], [0, 0]);\n  game = game.addOpponentMove([0, 0], [1, 1]);\n  game = game.addMyMove([1, 1], [0, 0]);\n  game = game.addOpponentMove([0, 0], [1, 2]);\n  game = game.addMyMove([1, 2], [0, 0]);\n  game = game.addOpponentMove([0, 2], [2, 1]);\n  game = game.addMyMove([2, 1], [0, 0]);\n  game = game.addOpponentMove([2, 2], [0, 2]);\n  game = game.addMyMove([0, 2], [1, 1]);\n  game = game.addOpponentMove([1, 1], [2, 2]);\n  game.addMyMove([2, 2], [1, 2]);\n});"]}