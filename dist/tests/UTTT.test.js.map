{"version":3,"sources":["../../src/tests/UTTT.test.js"],"names":["validateBoard","board","t","true","Array","isArray","forEach","row","cell","is","winner","tic","move","throws","gameFinished","notThrows","prettyPrint"],"mappings":"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","file":"UTTT.test.js","sourcesContent":["import test from 'ava';\n\nimport UTTT from '../UTTT';\nimport errors from '../errors';\n\nfunction validateBoard(board, t){\n  t.true(Array.isArray(board));\n\n  board.forEach((row) => {\n    t.true(Array.isArray(row));\n    row.forEach((cell) => {\n      t.is(cell.winner, -1);\n    });\n  });\n}\n\ntest('Returns a valid UTTT model', t => {\n  const tic = new UTTT();\n\n  t.is(typeof(tic), 'object');\n  t.is(typeof(tic.move), 'function');\n  validateBoard(tic.board, t);\n});\n\ntest('Move correctly updates the board', t => {\n  const tic = new UTTT();\n\n  tic.move([1, 0], 1, [0, 0]);\n  tic.move([0, 0], 2, [2, 1]);\n\n  t.is(tic.board[1][0].board[0][0], 1);\n  t.is(tic.board[0][0].board[2][1], 2);\n});\n\ntest('Move rejects moves to the wrong board', t => {\n  const tic = new UTTT();\n\n  tic.move([1, 0], 1, [0, 0]);\n\n  t.throws(() => {\n    tic.move([2, 0], 2, [2, 1])\n  }, errors.board);\n});\n\ntest('Detect game ending', t => {\n  const tic = new UTTT();\n\n  // Win [0, 0]\n  tic.move([0, 0], 1, [0, 0]);\n  tic.move([0, 0], 1, [1, 0]);\n  tic.move([1, 0], 1, [0, 0]);\n  tic.move([0, 0], 1, [2, 0]);\n\n  // Win [1, 0]\n  tic.move([2, 0], 1, [1, 0]);\n  tic.move([1, 0], 1, [1, 0]);\n  tic.move([1, 0], 1, [2, 0]);\n\n  // Win [2, 0]\n  tic.move([2, 0], 1, [2, 0]);\n  tic.move([2, 0], 1, [0, 0]);\n\n  t.throws(() => {\n    tic.move([0, 0], 1, [1, 1]);\n  }, errors.gameFinished);\n\n  t.notThrows(() => {\n    tic.prettyPrint();\n  });\n\n  t.is(tic.winner, 1);\n});\n\ntest('Move allows playing on already won boards', t => {\n  const tic = new UTTT();\n\n  // Win [0, 0]\n  tic.move([0, 0], 1, [0, 0]);\n  tic.move([0, 0], 1, [1, 0]);\n  tic.move([1, 0], 1, [0, 0]);\n  tic.move([0, 0], 1, [2, 0]);\n  tic.move([2, 0], 1, [0, 0]);\n\n  t.notThrows(() => {\n    tic.move([0, 0], 1, [1, 1]);\n  });\n\n  t.notThrows(() => {\n    tic.prettyPrint();\n  });\n});\n\ntest('Move allows any board after being sent to one that is won', t => {\n  const tic = new UTTT();\n\n  // Fill [0, 0]\n  tic.move([0, 0], 1, [0, 0]);\n  tic.move([0, 0], 1, [1, 0]);\n  tic.move([1, 0], 1, [0, 0]);\n  tic.move([0, 0], 1, [2, 0]);\n\n  t.notThrows(() => {\n    tic.move([2, 0], 1, [0, 0]);\n  });\n});"]}