{"version":3,"sources":["../../src/tests/TicTacToe.test.js"],"names":["validateBoard","board","t","true","Array","isArray","forEach","row","cell","tic","is","move","deepEqual","throws","player","message","notThrows","repeat","boardFinished","prettyPrint","winner"],"mappings":"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","file":"TicTacToe.test.js","sourcesContent":["import test from 'ava';\n\nimport TicTacToe from '../model/TicTacToe';\nimport errors from '../model/errors';\nimport error from '../error';\n\nfunction validateBoard(board, t){\n  t.true(Array.isArray(board));\n\n  board.forEach((row) => {\n    t.true(Array.isArray(row));\n    row.forEach((cell) => {\n      t.true(cell >= 0);\n      t.true(cell <= 2);\n    });\n  });\n}\n\ntest('Returns a valid TicTacToe model', t => {\n  const tic = new TicTacToe();\n\n  t.is(typeof(tic), 'object');\n  t.is(typeof(tic.move), 'function');\n  validateBoard(tic.board, t);\n});\n\ntest('Move correctly updates the board', t => {\n  const tic = new TicTacToe();\n\n  tic.move(1, [0, 0]);\n  tic.move(2, [2, 1]);\n\n  t.deepEqual(tic.board, [\n    [1, 0, 0],\n    [0, 0, 0],\n    [0, 2, 0]\n  ]);\n});\n\ntest('Move rejects invalid player', t => {\n  const tic = new TicTacToe();\n\n  t.throws(() => {tic.move(-1, 1)}, error(errors.player, '-1').message);\n  t.throws(() => {tic.move('abc', 1)}, error(errors.player, 'abc').message);\n  t.throws(() => {tic.move(0, 1)}, error(errors.player, '0').message);\n  t.throws(() => {tic.move(3, 1)}, error(errors.player, '3').message);\n});\n\ntest('Move rejects invalid moves', t => {\n  const tic = new TicTacToe();\n\n  t.throws(() => {tic.move(1)}, error(errors.move).message);\n  t.throws(() => {tic.move(1, 1)}, error(errors.move, 1).message);\n  t.throws(() => {tic.move(1, 'abc')}, error(errors.move, 'abc').message);\n  t.throws(() => {tic.move(1, [])}, error(errors.move, []).message);\n  t.throws(() => {tic.move(1, [1])}, error(errors.move, [1]).message);\n  t.throws(() => {tic.move(1, [1, 4])}, error(errors.move, [1, 4]).message);\n  t.throws(() => {tic.move(1, [-1, 4])}, error(errors.move, [-1, 4]).message);\n  t.throws(() => {tic.move(1, [1, 1, 1])}, error(errors.move, [1, 1, 1]).message);\n});\n\ntest('Move rejects repeated moves', t => {\n  const tic = new TicTacToe();\n\n  t.notThrows(() => {tic.move(1, [1, 1])});\n  t.throws(() => {tic.move(1, [1, 1])}, error(errors.repeat, [1, 1]).message);\n});\n\ntest('Move rejects moves after finishing the game', t => {\n  const tic = new TicTacToe();\n\n  t.notThrows(() => {tic.move(1, [0, 0])});\n  t.notThrows(() => {tic.move(2, [0, 1])});\n  t.notThrows(() => {tic.move(1, [0, 2])});\n  t.notThrows(() => {tic.move(2, [1, 0])});\n  t.notThrows(() => {tic.move(2, [1, 1])});\n  t.notThrows(() => {tic.move(1, [1, 2])});\n  t.notThrows(() => {tic.move(1, [2, 0])});\n  t.notThrows(() => {tic.move(1, [2, 1])});\n  t.notThrows(() => {tic.move(2, [2, 2])});\n\n  t.throws(() => {tic.move(2, [1, 1])}, error(errors.boardFinished).message);\n});\n\ntest('Can pretty print a board', t => {\n  const tic = new TicTacToe();\n\n  t.notThrows(() => {\n    tic.prettyPrint();\n  });\n});\n\ntest('Detect winning row', t => {\n  const tic = new TicTacToe();\n\n  t.notThrows(() => {tic.move(1, [0, 0])});\n  t.notThrows(() => {tic.move(2, [1, 1])});\n  t.notThrows(() => {tic.move(1, [0, 2])});\n  t.notThrows(() => {tic.move(2, [1, 0])});\n  t.notThrows(() => {tic.move(1, [0, 1])});\n\n  t.is(tic.winner, 1);\n});\n\ntest('Detect winning column', t => {\n  const tic = new TicTacToe();\n\n  t.notThrows(() => {tic.move(1, [0, 0])});\n  t.notThrows(() => {tic.move(2, [1, 1])});\n  t.notThrows(() => {tic.move(1, [2, 0])});\n  t.notThrows(() => {tic.move(2, [0, 1])});\n  t.notThrows(() => {tic.move(1, [1, 0])});\n\n  t.is(tic.winner, 1);\n});\n\ntest('Detect winning RtL diagonal', t => {\n  const tic = new TicTacToe();\n\n  t.notThrows(() => {tic.move(1, [0, 0])});\n  t.notThrows(() => {tic.move(2, [2, 1])});\n  t.notThrows(() => {tic.move(1, [1, 1])});\n  t.notThrows(() => {tic.move(2, [2, 0])});\n  t.notThrows(() => {tic.move(1, [2, 2])});\n\n  t.is(tic.winner, 1);\n});\n\ntest('Detect winning LtR diagonal', t => {\n  const tic = new TicTacToe();\n\n  t.notThrows(() => {tic.move(1, [2, 0])});\n  t.notThrows(() => {tic.move(2, [2, 1])});\n  t.notThrows(() => {tic.move(1, [1, 1])});\n  t.notThrows(() => {tic.move(2, [1, 0])});\n  t.notThrows(() => {tic.move(1, [0, 2])});\n\n  t.is(tic.winner, 1);\n});"]}